라인피드(LF : Line Feed) => 현재 위치에서 바로 아래로 이동
캐리지리턴(CR: Carriage return) => 커서의 위치를 앞으로 이동


출처: https://jink1982.tistory.com/122 [돼민이]


f.read()는 파일의 내용 전체를 문자열로 돌려준다. 따라서 위 예의 data는 파일의 전체 내용이다.

# file exercise
f = open("test3",'r', encoding='UTF-8')
line = f.readlines()
print(line)
f.close()

결과 :
['진민호\n', '진민호2\n', '진민호3\n', '진민호3진민호3\n', '진민호3진민호3']

# file exercise
f = open("test3", 'r', encoding='UTF-8')
data = f.read()
print(data)
f.close()

결과 :
진민호
진민호2
진민호3
진민호3진민호3
진민호3진민호3


f.read()는 파일의 내용 전체를 문자열로 돌려준다. 



--------------------------------------------------------------------------------
Python 문자열 파싱

lambda는 왜 쓰는가?
익명함수이기 때문에 한번 쓰이고 다음줄로 넘어가면 힙(heap) 메모리 영역에서 증발
(참고) 가비지 컬렉터 (참조하는 객체가 없으면 지워버린다) 
파이썬에서는 모든것이 객체로 관리 되고 각 객체들은 레퍼런스 카운터를 갖게 된다. 이 카운터가 0 즉, 그 누구도 참조하지 않게 된다면 메모리를 환원 하게 된다.

map 함수
내장함수
입력받은 자료형의 각 요소가 합수에 의해 수행된 결과를 묶어서 map iterator 객체로 리턴
https://wayhome25.github.io/cs/2017/04/03/cs-03/

filter 함수
filter(함수, literable)
두번째 인수인 반복 가능한 자료형 요소들을 첫번째 인자 함수에 하나씩 입력하여 리턴값이 참인 것만 묶어서 돌려준다.
함수의 리턴 값은 참이나 거짓이어야 한다.

reduce 함수
python3 부터 내장함수에서 빠짐
reduce(function, iterable[, initializer])
문서

-------------------------------------
파이썬 naming rule
메서드이름 : listPrint
클래스 이름 첫글자 : ShopCart
소문자 : 메서드이름 규칙을 따른다
패키지 : 소문자사용
상수 : 대문자 DEFAULT 
-------------------------------------
# *arg : tuple : arguments /인자/파라미터/매개변수
# **kwargs : dict : keywards argument
--------------------------------------
파이썬에서 *(asterisk)의 사용.
https://mingrammer.com/understanding-the-asterisk-of-python/
--------------------------------------

아규먼트(argument) 와 파라미터(parameter) 흔히들 구분하지 않고 사용한다.
하지만 이 둘은 분명히 차이가 있다.

PARAMETER란?

한글 그대로 번역하면 '매개변수'란 뜻이다. 즉,

함수를 정의 할 때
외부로부터 받아들이는 임의의 값을 의미한다.
가령 
function f(x,y){
return x+y;
};
에서 x,y가 파라미터라고 할수 있다.

 그럼 ARGUMENT란?
우리말로는 '인수' 라고 번역되는데,
함수를 호출할 때 이 때 사용하게 되는 일련의 값들을 아규먼트라고 부른다.
예컨대 위에 파라미터의 예를 들었던 함수를 호출한다고 하면,
f(3,4);
에서 3,4등이 아규먼트이다.

즉, '파라미터의 값으로 아규먼트 3과 4를 대입하였다'
라는 의미가 성립하는것이다.

이처럼 파라미터와 아규먼트는 분명 같은위치에 있지만 다른의미로 쓰이는 것을 알수 있다.


출처: https://enarastudent.tistory.com/entry/함수의-아규먼트와-파라미터의-차이 [Coding Story]
----------------------------------------------------------------------------------------------------------
의사코드(슈도코드, pseudocode[1])는 프로그램을 작성할 때 각 모듈이 작동하는 논리를 표현하기 위한 언어이다. 특정 프로그래밍 언어의 문법에 따라 쓰인 것이 아니라, 
일반적인 언어로 코드를 흉내 내어 알고리즘을 써놓은 코드를 말한다. 의사(疑似)코드는 말 그대로 흉내만 내는 코드이기 때문에, 
실제적인 프로그래밍 언어로 작성된 코드처럼 컴퓨터에서 실행할 수 없으며, 특정 언어로 프로그램을 작성하기 전에 알고리즘의 모델을 대략적으로 모델링하는 데에 쓰인다. 

----------------------------------------------------------------------------------------------------------


함수(Function) VS 메소드(Method)

● 함수(Function) : 함수는 특정 작업을 수행하는 "코드조각"이에요. 전역, 지역이던 "독립된 기능"을 수행하는 단위죠. 

예를들어

이런거요. 저 "코드조각" 하는 일을 알 수 있는 이름을 "함수의 이름"으로 부여해요.
그리고 이 "이름"은 함수를 "호출"하여 해당작업을 수행합니다. 
함수를 메소드보다 먼저 말씀드린 이유는, 함수가 메소드를 포함하고 있기 때문이에요. 


● 메소드(Method) :  클래스, 구조체, 열거형에 포함되어있는 "함수"를 메소드라고 부릅니다. 메소드를 다른말로 "클래스 함수"라고도 해요. 

출처: https://zeddios.tistory.com/233 [ZeddiOS]
game/
    __init__.py
    sound/
        __init__.py
        echo.py
        wav.py
    graphic/
        __init__.py
        screen.py
        render.py
    play/
        __init__.py
        run.py
        test.py

__init__py는 디렉리임을 알려주는 문장.

game/sound/에 echo, wav이라는 모듈이 들어있다.
그리고 그 모듈에는 메소드가 있다.


----------------------------------------------------------------------------------------------------------

오늘 하고 갈 일.
300제 문제 남은거 다 풀기,
점프 투 파이썬 06장 두문제 풀기.